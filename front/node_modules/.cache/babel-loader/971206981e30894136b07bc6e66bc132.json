{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mfs/Desktop/web_apps/the-uncanny-valley/front/src/components/ImageMesh.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport { useFrame } from 'react-three-fiber';\nexport const ImageMesh = props => {\n  _s();\n\n  var _props$imageData, _props$imageData2;\n\n  const mesh = useRef();\n  const numCols = (_props$imageData = props.imageData) === null || _props$imageData === void 0 ? void 0 : _props$imageData.width;\n  const numRows = (_props$imageData2 = props.imageData) === null || _props$imageData2 === void 0 ? void 0 : _props$imageData2.height;\n  useEffect(() => {\n    if (props.imageData) {\n      for (let i = 0; i < props.imageData.data.length; i += 4) {// create a point object with color data[i + 0], data[i + 1], data[i + 2], data[i + 3]\n        // and location\n      }\n    }\n  }, []); // animation stage\n\n  useFrame(() => {\n    if (mesh.current) {}\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ImageMesh, \"7FrEO7S1A/v9gqph5oXaD39NhMA=\", false, function () {\n  return [useFrame];\n});\n\n_c = ImageMesh;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageMesh\");","map":{"version":3,"sources":["/Users/mfs/Desktop/web_apps/the-uncanny-valley/front/src/components/ImageMesh.tsx"],"names":["React","useEffect","useRef","useFrame","ImageMesh","props","mesh","numCols","imageData","width","numRows","height","i","data","length","current"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAmD,OAAnD;AACA,SAAoBC,QAApB,QAAoC,mBAApC;AAQA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAA2B;AAAA;;AAAA;;AAClD,QAAMC,IAAI,GAAGJ,MAAM,EAAnB;AACA,QAAMK,OAAO,uBAAGF,KAAK,CAACG,SAAT,qDAAG,iBAAiBC,KAAjC;AACA,QAAMC,OAAO,wBAAGL,KAAK,CAACG,SAAT,sDAAG,kBAAiBG,MAAjC;AACAV,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,KAAK,CAACG,SAAV,EAAqB;AACnB,WAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,KAAK,CAACG,SAAN,CAAgBK,IAAhB,CAAqBC,MAAzC,EAAiDF,CAAC,IAAE,CAApD,EAAuD,CACrD;AACA;AACD;AACF;AAEF,GARQ,EAQN,EARM,CAAT,CAJkD,CAalD;;AACAT,EAAAA,QAAQ,CAAC,MAAM;AACb,QAAIG,IAAI,CAACS,OAAT,EAAkB,CAEjB;AACF,GAJO,CAAR;AAMA,sBACE;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAzBM;;GAAMX,S;UAcXD,Q;;;KAdWC,S","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport { MeshProps, useFrame } from 'react-three-fiber'\nimport { Mesh } from 'three'\n\ntype ImageMeshProps = {\n  meshProps?: MeshProps,\n  imageData?: ImageData\n}\n\nexport const ImageMesh = (props: ImageMeshProps) => {\n  const mesh = useRef<Mesh>();\n  const numCols = props.imageData?.width;\n  const numRows = props.imageData?.height;\n  useEffect(() => {\n    if (props.imageData) {\n      for (let i = 0; i < props.imageData.data.length; i+=4) {\n        // create a point object with color data[i + 0], data[i + 1], data[i + 2], data[i + 3]\n        // and location\n      }\n    }\n\n  }, [])\n  // animation stage\n  useFrame(() => {\n    if (mesh.current) {\n\n    }\n  })\n\n  return (\n    <div>\n\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}