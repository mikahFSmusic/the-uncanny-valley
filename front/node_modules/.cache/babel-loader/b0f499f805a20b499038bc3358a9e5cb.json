{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mfs/Desktop/web_apps/the-uncanny-valley/front/src/components/ImageMesh.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport { useFrame } from 'react-three-fiber';\nexport const ImageMesh = props => {\n  _s();\n\n  const mesh = useRef();\n  useEffect(() => {\n    if (props.imageData) {\n      for (let i = 0; i < props.imageData.data.length; i += 4) {}\n    }\n  }, []); // animation stage\n\n  useFrame(() => {\n    if (mesh.current) {}\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ImageMesh, \"7FrEO7S1A/v9gqph5oXaD39NhMA=\", false, function () {\n  return [useFrame];\n});\n\n_c = ImageMesh;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageMesh\");","map":{"version":3,"sources":["/Users/mfs/Desktop/web_apps/the-uncanny-valley/front/src/components/ImageMesh.tsx"],"names":["React","useEffect","useRef","useFrame","ImageMesh","props","mesh","imageData","i","data","length","current"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAmD,OAAnD;AACA,SAAoBC,QAApB,QAAoC,mBAApC;AAQA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAA2B;AAAA;;AAClD,QAAMC,IAAI,GAAGJ,MAAM,EAAnB;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,KAAK,CAACE,SAAV,EAAqB;AACnB,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACE,SAAN,CAAgBE,IAAhB,CAAqBC,MAAzC,EAAiDF,CAAC,IAAE,CAApD,EAAuD,CAEtD;AACF;AAEF,GAPQ,EAON,EAPM,CAAT,CAFkD,CAUlD;;AACAL,EAAAA,QAAQ,CAAC,MAAM;AACb,QAAIG,IAAI,CAACK,OAAT,EAAkB,CAEjB;AACF,GAJO,CAAR;AAMA,sBACE;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAtBM;;GAAMP,S;UAWXD,Q;;;KAXWC,S","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport { MeshProps, useFrame } from 'react-three-fiber'\nimport { Mesh } from 'three'\n\ntype ImageMeshProps = {\n  meshProps?: MeshProps,\n  imageData?: ImageData\n}\n\nexport const ImageMesh = (props: ImageMeshProps) => {\n  const mesh = useRef<Mesh>();\n  useEffect(() => {\n    if (props.imageData) {\n      for (let i = 0; i < props.imageData.data.length; i+=4) {\n\n      }\n    }\n\n  }, [])\n  // animation stage\n  useFrame(() => {\n    if (mesh.current) {\n\n    }\n  })\n\n  return (\n    <div>\n\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}